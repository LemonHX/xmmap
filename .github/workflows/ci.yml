name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        target: x86_64-pc-windows-gnu

    - name: Run fmt checks
      env:
        CLIPPY_OPTS: --all-targets -- --allow clippy::len_without_is_empty --allow clippy::missing_safety_doc
      run: |
        cargo fmt -- --check
    - name: Run check cross compile
      env:
          CLIPPY_OPTS: --all-targets -- --allow clippy::len_without_is_empty --allow clippy::missing_safety_doc
      run: |
        cargo clippy --target x86_64-pc-windows-gnu $CLIPPY_OPTS
      # cargo clippy --target x86_64-unknown-linux-gnu $CLIPPY_OPTS
      # cargo clippy --target x86_64-apple-darwin $CLIPPY_OPTS
      # cargo clippy --target aarch64-apple-darwin $CLIPPY_OPTS



  test-win:
    runs-on: windows-latest
    strategy:
      matrix:
        target:
          - i686-pc-windows-gnu
          - i686-pc-windows-msvc
          - x86_64-pc-windows-gnu
          - x86_64-pc-windows-msvc
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set default target
      run: rustup default stable-${{ matrix.target }}

    - name: Run tests
      run: cargo test --all-features

  test-macos:
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Run tests
      run: cargo test --all-features

  test-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - i686-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set default target
      run: rustup default stable-${{ matrix.target }}

    - name: Run tests
      run: cargo test --all-features
